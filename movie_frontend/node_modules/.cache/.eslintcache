[{"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/index.tsx":"1","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/reportWebVitals.ts":"2","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/App.tsx":"3","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/NavBarAndMenuDrawer.tsx":"4","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/AllMoviesPage.tsx":"5","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/index.tsx":"6","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/HomePage/index.tsx":"7","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/Navbar.tsx":"8","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MenuDrawer.tsx":"9","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/components/MovieList.tsx":"10","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/services/restService.tsx":"11","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/MovieInfo.tsx":"12","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/RateMovie.tsx":"13","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/Rating.tsx":"14","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/SearchBar.tsx":"15","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/components/MovieItem.tsx":"16","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/TopRatedPage/TopRatedPage.tsx":"17","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/TopRatedPage/comparisonFunction.tsx":"18","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AddDialog.tsx":"19","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/components/DeleteButton.tsx":"20"},{"size":500,"mtime":1634045841081,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1634045841082,"results":"23","hashOfConfig":"22"},{"size":1182,"mtime":1634909337042,"results":"24","hashOfConfig":"22"},{"size":443,"mtime":1634641533214,"results":"25","hashOfConfig":"22"},{"size":1039,"mtime":1635152636368,"results":"26","hashOfConfig":"22"},{"size":2401,"mtime":1635240595547,"results":"27","hashOfConfig":"22"},{"size":218,"mtime":1634047355324,"results":"28","hashOfConfig":"22"},{"size":1643,"mtime":1635242149738,"results":"29","hashOfConfig":"22"},{"size":1753,"mtime":1634909242711,"results":"30","hashOfConfig":"22"},{"size":1815,"mtime":1635153005546,"results":"31","hashOfConfig":"22"},{"size":1920,"mtime":1635155097806,"results":"32","hashOfConfig":"22"},{"size":827,"mtime":1635241906479,"results":"33","hashOfConfig":"22"},{"size":1916,"mtime":1635155072796,"results":"34","hashOfConfig":"22"},{"size":2010,"mtime":1635234692274,"results":"35","hashOfConfig":"22"},{"size":5286,"mtime":1635157562971,"results":"36","hashOfConfig":"22"},{"size":1145,"mtime":1635152902034,"results":"37","hashOfConfig":"22"},{"size":1147,"mtime":1635152653592,"results":"38","hashOfConfig":"22"},{"size":227,"mtime":1634744261214,"results":"39","hashOfConfig":"22"},{"size":2764,"mtime":1635148271862,"results":"40","hashOfConfig":"22"},{"size":440,"mtime":1635152668280,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xszusv",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/index.tsx",[],["94","95"],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/reportWebVitals.ts",[],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/App.tsx",["96"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./components/HomePage\";\nimport { MoviePage } from \"./components/MoviePage\";\nimport { NavbarAndMenuDrawer } from \"./components/NavBarAndMenuDrawer\";\nimport { ThemeProvider } from \"@mui/material\";\n\nimport { createTheme } from \"@mui/material/styles\";\nimport { AllMoviesPage } from \"./components/AllMoviesPage/AllMoviesPage\";\nimport { TopRatedPage } from \"./components/TopRatedPage/TopRatedPage\";\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={HomePage} />\n    <Route path=\"/movie/:movieId\" exact component={MoviePage} />\n    <Route path=\"/movies/browse\" exact component={AllMoviesPage} />\n    <Route path=\"/movies/topmovies\" exact component={TopRatedPage} />\n  </Switch>\n);\n\nconst App = () => {\n  const theme = createTheme({\n    palette: {\n      mode: \"dark\",\n    },\n  });\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <NavbarAndMenuDrawer />\n          <Routes />\n        </BrowserRouter>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/NavBarAndMenuDrawer.tsx",[],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/AllMoviesPage.tsx",["97","98","99","100","101","102"],"import { Box, List, ListItem } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { MovieList } from \"./components/MovieList\";\nimport { IMovie } from \"../../interfaces/movieInterface\";\nimport { ALL_MOVIES, deleteMovie, get } from \"../../services/restService\";\n\nexport const AllMoviesPage = () => {\n  const [movies, setMovies] = useState<IMovie[]>();\n  const [test, setTest] = useState();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await get(ALL_MOVIES);\n      console.log(data);\n\n      setMovies(data);\n    };\n    fetch();\n  }, []);\n\n  const handleDelete = async (id: string) => {\n    setMovies(movies!.filter((movie) => movie.id != id));\n    await deleteMovie(id);\n  };\n\n  return (\n    <Box\n      sx={{ width: \"100%\", height: \"100%\" }}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      minHeight=\"100vh\"\n    >\n      {movies != undefined && (\n        <MovieList movies={movies} handleDelete={handleDelete}></MovieList>\n      )}\n    </Box>\n  );\n};\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/index.tsx",["103","104"],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/HomePage/index.tsx",["105","106","107"],"import React from \"react\";\n\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nexport const HomePage = () => {\n  return (\n    <div className=\"App\">\n      <h1>THIS IS THE HOMEPAGE</h1>\n    </div>\n  );\n};\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/Navbar.tsx",[],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MenuDrawer.tsx",["108"],"import React from \"react\";\nimport {\n  Home as HomeIcon,\n  List as ListIcon,\n  FormatListNumbered as RatingIcon,\n} from \"@material-ui/icons\";\nimport {\n  Drawer,\n  Grid,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { HomePage } from \"./HomePage\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  list: { width: 250 },\n  item: {\n    color: \"#FFFFF\",\n  },\n});\ntype MenuItem = {\n  icon?: React.ReactElement;\n  name: string;\n  route: string;\n};\n\ntype Props = {\n  open: boolean;\n  toggleOpen: () => void;\n};\n\nconst menuItem: MenuItem[] = [\n  {\n    name: \"Home\",\n    route: \"/\",\n\n    icon: <HomeIcon />,\n  },\n  {\n    name: \"Browse\",\n    route: \"/movies/browse\",\n\n    icon: <ListIcon />,\n  },\n  {\n    name: \"Top rated movies\",\n    route: \"/movies/topmovies\",\n    icon: <RatingIcon />,\n  },\n];\nexport const MenuDrawer = ({ open, toggleOpen }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Grid item>\n        <Drawer open={open} onClose={toggleOpen}>\n          <div className={classes.list}>\n            <List>\n              {menuItem.map((item) => (\n                <ListItem\n                  onClick={toggleOpen}\n                  key={item.name}\n                  button={true}\n                  divider={true}\n                  component={Link}\n                  to={item.route}\n                >\n                  <ListItemIcon>\n                    <Icon>{item.icon}</Icon>\n                  </ListItemIcon>\n                  <ListItemText primary={item.name} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n        </Drawer>\n      </Grid>\n    </Grid>\n  );\n};\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/components/MovieList.tsx",["109","110"],"import { makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { IMovie } from \"../../../interfaces/movieInterface\";\nimport { MovieItem } from \"./MovieItem\";\nimport { Divider, Grid, List } from \"@mui/material\";\nimport { DeleteButton } from \"./DeleteButton\";\nimport { deleteMovie } from \"../../../services/restService\";\nexport const MovieList = (props: {\n  movies: IMovie[];\n  handleDelete(id: string): void;\n  indexing?: boolean;\n}) => {\n  const checkOnBottom = (event: any) => {\n    if (event.target.scrollTop === event.target.scrollHeight) {\n      console.log(\"NU ÄR VI I BOTTEN\");\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <List sx={{ width: \"50%\" }} onScroll={() => console.log(\"asdfsafasdf\")}>\n      {props.movies.map((movie, index) => (\n        <Grid\n          container\n          spacing={2}\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          key={index}\n        >\n          {props.indexing && (\n            <Grid item xs={1}>\n              <h3>{index + 1}</h3>\n            </Grid>\n          )}\n          <Grid item xs={10}>\n            <MovieItem\n              id={movie.id}\n              title={movie.title}\n              genre={movie.genre}\n              description={movie.description}\n              rating={movie.rating}\n              numberOfVotes={movie.numberOfVotes}\n            />\n            <Divider className={classes.divider} />\n          </Grid>\n          <Grid item xs={1}>\n            <DeleteButton\n              id={movie.id}\n              handleDelete={props.handleDelete}\n            ></DeleteButton>\n          </Grid>\n        </Grid>\n      ))}\n    </List>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\",\n  },\n}));\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/services/restService.tsx",["111"],"import axios from \"axios\";\nimport { IMovie, IRating } from \"../interfaces/movieInterface\";\n\nconst BASE_URL_API = \"http://localhost:8080\";\nexport const ALL_MOVIES = \"/api/movie/getall\";\nexport const MATCHING_MOVIES = \"/api/movie/matchingmovies\";\nexport const GET_MOVIE = \"/api/movie/get\";\nexport const PATCH_MOVIE = \"/api/movie/rating\";\nexport const GET_TOP_RATED_MOVIES = \"/api/movie/topratedmovies\";\nexport const ADD_MOVIE = \"/api/movie/add\";\nconst DELETE_MOVIE = \"/api/movie/delete\";\n\nexport const get = async (endpoint: string, paramValue?: string) => {\n  try {\n    const response = await axios.get<any>(BASE_URL_API + endpoint, {\n      params: { value: paramValue },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const post = async (endpoint: string, body: IMovie) => {\n  try {\n    const response = await axios.post<any>(BASE_URL_API + endpoint, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const patch = async (\n  endpoint: string,\n  paramValue: string,\n  body: IRating\n) => {\n  try {\n    const response = await axios.patch<any>(BASE_URL_API + endpoint, body, {\n      params: { value: paramValue },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteMovie = async (id: string) => {\n  try {\n    const response = await axios.delete(BASE_URL_API + DELETE_MOVIE, {\n      params: { value: id },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/MovieInfo.tsx",["112","113"],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/RateMovie.tsx",[],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/Rating.tsx",["114","115","116","117"],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/SearchBar.tsx",["118","119"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Autocomplete,\n  CircularProgress,\n  createFilterOptions,\n  TextField,\n} from \"@mui/material\";\nimport { IMovie } from \"../interfaces/movieInterface\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { ADD_MOVIE, get, MATCHING_MOVIES, post } from \"../services/restService\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AddDialog } from \"./AddDialog\";\nimport { Movie } from \"@material-ui/icons\";\n\nexport interface IMovieOptionType {\n  id: string;\n  inputValue?: string;\n  title: string;\n  genre: string;\n\n  description: string;\n  rating: number;\n  numberOfVotes: number;\n}\n\nconst filter = createFilterOptions<IMovieOptionType>();\n\nexport const SearchBar = () => {\n  const history = useHistory();\n  const [value, setValue] = useState<IMovie>();\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<readonly IMovie[]>([]);\n  const [inputValue, setInputValue] = useState(\"Movies\");\n  const [loading, setLoading] = useState(false);\n  const [dialogValue, setDialogValue] = useState();\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    let active = true;\n\n    if (inputValue.length < 3) {\n      // setOptions(value ? [value] : []);\n\n      setOptions([]);\n      return undefined;\n    }\n\n    const getMovies = async () => {\n      setLoading(true);\n      await get(MATCHING_MOVIES, inputValue).then((data) => {\n        if (active) {\n          setOptions(data === undefined ? [] : data);\n        }\n        setLoading(false);\n      });\n    };\n    getMovies();\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleSelect = (event: any, value: any) => {\n    if (value != null) {\n      if (!value.id) {\n        setDialogValue(value);\n        setDialogOpen(true);\n      } else {\n        history.push({\n          pathname: `/movie/${value.id}`,\n        });\n      }\n    }\n\n    //Route to movie page\n  };\n  const handleAddMovie = async (movie: IMovie) => {\n    setDialogOpen(false);\n\n    await post(ADD_MOVIE, movie).then((data) => {\n      console.log(\"sadfsadfsadf\");\n\n      history.push({\n        pathname: `/movie/${data}`,\n      });\n    });\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n\n  return (\n    <>\n      <Autocomplete\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        freeSolo\n        classes={classes}\n        id=\"free-solo\"\n        sx={{ width: 600 }}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        style={{ color: \"white\" }}\n        value={value}\n        isOptionEqualToValue={(option, value) => option.title === value.title}\n        getOptionLabel={(option) => option.title}\n        options={options}\n        open={open}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (options.length < 1 && params.inputValue.length > 2 && !loading) {\n            filtered.push({\n              inputValue: params.inputValue,\n              id: \"\",\n              title: `Add \" ${params.inputValue}\"?`,\n              genre: \"\",\n\n              description: \"\",\n              rating: 0,\n              numberOfVotes: 0,\n            });\n          }\n          return filtered;\n        }}\n        onChange={(event, value) => {\n          handleSelect(event, value);\n        }}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Movie\"\n            InputProps={{\n              ...params.InputProps,\n              classes: classes,\n\n              endAdornment: (\n                <Fragment>\n                  {loading ? (\n                    <CircularProgress color=\"inherit\" size={20} />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </Fragment>\n              ),\n            }}\n          />\n        )}\n      />\n      {dialogOpen && (\n        <AddDialog\n          startValues={dialogValue!}\n          handleAddMovie={handleAddMovie}\n          dialogOpen={dialogOpen}\n          handleClose={handleClose}\n        />\n      )}\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\n      // Default transform is \"translate(14px, 20px) scale(1)\"\"\n      // This lines up the label with the initial cursor position in the input\n      // after changing its padding-left.\n\n      color: \"white\",\n    },\n  },\n  inputRoot: {\n    color: \"white\",\n    // This matches the specificity of the default styles at https://github.com/mui-org/material-ui/blob/v4.11.3/packages/material-ui-lab/src/Autocomplete/Autocomplete.js#L90\n    '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\n      // Default left padding is 6px\n\n      color: \"white\",\n      borderColor: \"white\",\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n    },\n    \"&:hover .MuiInputLabel-outlined\": {\n      color: \"red\",\n    },\n  },\n}));\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/components/MovieItem.tsx",["120","121","122"],"import { IMovie } from \"../../../interfaces/movieInterface\";\n\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { Divider, Grid, ListItem, ListItemButton } from \"@mui/material\";\nimport { Rating } from \"../../MoviePage/components/Rating\";\nimport { useHistory } from \"react-router\";\n\nexport const MovieItem = (movie: IMovie) => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push({ pathname: `/movie/${movie.id}` });\n  };\n  const classes = useStyles();\n  return (\n    <>\n      <ListItem>\n        <ListItemButton onClick={handleClick}>\n          <Grid container direction=\"column\" justifyContent=\"flex-start\">\n            <h3>{movie.title}</h3>\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <div>\n              <Rating\n                rating={movie.rating}\n                numberOfVotes={movie.numberOfVotes}\n              ></Rating>\n            </div>\n          </Grid>\n        </ListItemButton>\n      </ListItem>\n    </>\n  );\n};\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    // Theme Color, or use css color in quote\n    background: \"white\",\n  },\n}));\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/TopRatedPage/TopRatedPage.tsx",["123","124","125","126"],"import { Box, List, ListItem } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { MovieList } from \"../AllMoviesPage/components/MovieList\";\nimport { IMovie } from \"../../interfaces/movieInterface\";\nimport {\n  deleteMovie,\n  get,\n  GET_TOP_RATED_MOVIES,\n} from \"../../services/restService\";\nimport { sortMoviesDesc } from \"./comparisonFunction\";\n\nexport const TopRatedPage = () => {\n  const [movies, setMovies] = useState<IMovie[]>();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await get(GET_TOP_RATED_MOVIES);\n      setMovies(data.sort(sortMoviesDesc));\n    };\n    fetch();\n  }, []);\n\n  const handleDelete = async (id: string) => {\n    setMovies(movies!.filter((movie) => movie.id != id));\n    await deleteMovie(id);\n  };\n\n  return (\n    <Box\n      sx={{ width: \"100%\", height: \"100%\" }}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      minHeight=\"100vh\"\n    >\n      {movies != undefined && (\n        <MovieList\n          handleDelete={handleDelete}\n          movies={movies}\n          indexing={true}\n        ></MovieList>\n      )}\n    </Box>\n  );\n};\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/TopRatedPage/comparisonFunction.tsx",[],"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AddDialog.tsx",["127","128","129"],"import React, { useEffect, useState } from \"react\";\nimport { IMovie } from \"../interfaces/movieInterface\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\nimport { IMovieOptionType } from \"./SearchBar\";\n\ninterface IDialog {\n  startValues: IMovieOptionType;\n  handleAddMovie(movie: IMovie): void;\n  dialogOpen: boolean;\n  handleClose(): void;\n}\n\nexport const AddDialog = (props: IDialog) => {\n  const [dialogValue, setDialogValue] = useState<IMovie>();\n  const [error, setError] = useState({\n    title: false,\n    description: false,\n    genre: false,\n  });\n\n  useEffect(() => {\n    setDialogValue({\n      ...dialogValue!,\n      title: props.startValues.inputValue!,\n    });\n  }, [props.startValues]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    props.handleAddMovie({\n      id: \"\",\n      title: dialogValue!.title,\n      description: dialogValue!.description,\n      genre: dialogValue!.genre,\n      rating: 0,\n      numberOfVotes: 0,\n    });\n  };\n  return (\n    <Dialog open={props.dialogOpen} onClose={props.handleClose}>\n      <form onSubmit={handleSubmit}>\n        <DialogTitle>Add a new film</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Did you miss any film in our list? Please, add it!\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            value={dialogValue?.title}\n            onChange={(event) =>\n              setDialogValue({\n                ...dialogValue!,\n                title: event.target.value,\n              })\n            }\n            label=\"Title\"\n            type=\"text\"\n            variant=\"standard\"\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"name\"\n            onChange={(event) =>\n              setDialogValue({\n                ...dialogValue!,\n                description: event.target.value,\n              })\n            }\n            label=\"Description\"\n            type=\"text\"\n            variant=\"standard\"\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"name\"\n            onChange={(event) =>\n              setDialogValue({\n                ...dialogValue!,\n                genre: event.target.value,\n              })\n            }\n            label=\"Genre\"\n            type=\"text\"\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose}>Cancel</Button>\n          <Button type=\"submit\">Add</Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n","/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/components/DeleteButton.tsx",["130"],"import React from \"react\";\nimport { Button, IconButton } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\ninterface IDeleteButton {\n  id: string;\n  handleDelete(id: string): void;\n}\n\nexport const DeleteButton = (deleteProps: IDeleteButton) => {\n  return (\n    <IconButton\n      aria-label=\"delete\"\n      onClick={() => deleteProps.handleDelete(deleteProps.id)}\n    >\n      <DeleteIcon />\n    </IconButton>\n  );\n};\n",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":12},{"ruleId":"135","severity":1,"message":"139","line":1,"column":15,"nodeType":"137","messageId":"138","endLine":1,"endColumn":19},{"ruleId":"135","severity":1,"message":"140","line":1,"column":21,"nodeType":"137","messageId":"138","endLine":1,"endColumn":29},{"ruleId":"135","severity":1,"message":"141","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":14},{"ruleId":"135","severity":1,"message":"142","line":9,"column":16,"nodeType":"137","messageId":"138","endLine":9,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":22,"column":50,"nodeType":"145","messageId":"146","endLine":22,"endColumn":52},{"ruleId":"143","severity":1,"message":"144","line":34,"column":15,"nodeType":"145","messageId":"146","endLine":34,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":26,"column":15,"nodeType":"145","messageId":"146","endLine":26,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":45,"column":14,"nodeType":"145","messageId":"146","endLine":45,"endColumn":16},{"ruleId":"135","severity":1,"message":"147","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":23},{"ruleId":"135","severity":1,"message":"148","line":3,"column":25,"nodeType":"137","messageId":"138","endLine":3,"endColumn":30},{"ruleId":"135","severity":1,"message":"149","line":3,"column":32,"nodeType":"137","messageId":"138","endLine":3,"endColumn":38},{"ruleId":"135","severity":1,"message":"150","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":18},{"ruleId":"135","severity":1,"message":"151","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":21},{"ruleId":"135","severity":1,"message":"152","line":13,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":22},{"ruleId":"135","severity":1,"message":"153","line":64,"column":11,"nodeType":"137","messageId":"138","endLine":64,"endColumn":19},{"ruleId":"135","severity":1,"message":"154","line":5,"column":10,"nodeType":"137","messageId":"138","endLine":5,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":12,"column":9,"nodeType":"157","endLine":15,"endColumn":11},{"ruleId":"135","severity":1,"message":"158","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"159","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":24},{"ruleId":"135","severity":1,"message":"160","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":20},{"ruleId":"135","severity":1,"message":"161","line":7,"column":22,"nodeType":"137","messageId":"138","endLine":7,"endColumn":35},{"ruleId":"135","severity":1,"message":"162","line":15,"column":10,"nodeType":"137","messageId":"138","endLine":15,"endColumn":15},{"ruleId":"135","severity":1,"message":"163","line":32,"column":17,"nodeType":"137","messageId":"138","endLine":32,"endColumn":25},{"ruleId":"135","severity":1,"message":"164","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":16},{"ruleId":"135","severity":1,"message":"165","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":17},{"ruleId":"135","severity":1,"message":"166","line":14,"column":9,"nodeType":"137","messageId":"138","endLine":14,"endColumn":16},{"ruleId":"135","severity":1,"message":"139","line":1,"column":15,"nodeType":"137","messageId":"138","endLine":1,"endColumn":19},{"ruleId":"135","severity":1,"message":"140","line":1,"column":21,"nodeType":"137","messageId":"138","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":24,"column":50,"nodeType":"145","messageId":"146","endLine":24,"endColumn":52},{"ruleId":"143","severity":1,"message":"144","line":36,"column":15,"nodeType":"145","messageId":"146","endLine":36,"endColumn":17},{"ruleId":"135","severity":1,"message":"167","line":23,"column":10,"nodeType":"137","messageId":"138","endLine":23,"endColumn":15},{"ruleId":"135","severity":1,"message":"168","line":23,"column":17,"nodeType":"137","messageId":"138","endLine":23,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":34,"column":6,"nodeType":"171","endLine":34,"endColumn":25,"suggestions":"172"},{"ruleId":"135","severity":1,"message":"164","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":16},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'ListItem' is defined but never used.","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'HomePage' is defined but never used.","'deleteMovie' is defined but never used.","'checkOnBottom' is assigned a value but never used.","'response' is assigned a value but never used.","'makeStyles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IMovie' is defined but never used.","'RatingClassKey' is defined but never used.","'dispRating' is assigned a value but never used.","'setDispRating' is assigned a value but never used.","'Movie' is defined but never used.","'setValue' is assigned a value but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dialogValue'. Either include it or remove the dependency array. You can also do a functional update 'setDialogValue(d => ...)' if you only need 'dialogValue' in the 'setDialogValue' call.","ArrayExpression",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},"Update the dependencies array to be: [dialogValue, props.startValues]",{"range":"178","text":"179"},[767,786],"[dialogValue, props.startValues]"]