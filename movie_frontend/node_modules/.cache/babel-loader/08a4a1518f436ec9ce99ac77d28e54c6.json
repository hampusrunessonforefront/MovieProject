{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movies_frontend/movie-app/src/components/ScrollMoviePage/components/ScrollList.tsx\";\nimport React from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScrollList = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: this.state.items.length,\n      next: this.fetchMoreData,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = ScrollList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollList\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movies_frontend/movie-app/src/components/ScrollMoviePage/components/ScrollList.tsx"],"names":["React","InfiniteScroll","ScrollList","props","state","items","length","fetchMoreData"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAiC;AACzD,sBACE;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAD/B;AAEE,MAAA,IAAI,EAAE,KAAKC,aAFb;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXM;KAAML,U","sourcesContent":["import { List } from \"@mui/material\";\nimport React from \"react\";\nimport { IMovie } from \"../../../interfaces/movieInterface\";\nimport { MovieItem } from \"./MovieItem\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nexport const ScrollList = (props: { movies: IMovie[] }) => {\n  return (\n    <div>\n      <InfiniteScroll\n        dataLength={this.state.items.length}\n        next={this.fetchMoreData}\n        hasMore={true}\n        loader={<h4>Loading...</h4>}\n      ></InfiniteScroll>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}