{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movies_frontend/movie-app/src/components/MoviePage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MovieInfo } from \"./components/MovieInfo\";\nimport { Rating } from \"./components/Rating\";\nimport { RateMovie } from \"./components/RateMovie\";\nimport { get, GET_MOVIE } from \"../../services/restService\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MoviePage = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState();\n  const [rating, setRating] = useState();\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await get(GET_MOVIE, movieId);\n      setMovie(data === undefined ? undefined : data);\n      setRating({\n        rating: {\n          r: data.rating,\n          numberOfVotes: data.numberOfVotes\n        }\n      });\n      console.log(movie);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const handleRatingChange = rating => {\n    const newMovie = movie;\n    newMovie.rating = rating;\n    newMovie.numberOfVotes += 1;\n    console.log(rating);\n    setMovie(newMovie);\n    console.log(movie);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movie != undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"2%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(MovieInfo, {\n            id: movie.id,\n            title: movie.title,\n            description: movie.description,\n            rating: movie.rating,\n            numberOfVotes: movie.numberOfVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          direction: \"column\",\n          style: {\n            backgroundColor: \"blue\",\n            marginLeft: \"5%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            rating: movie.rating,\n            numberOfVotes: movie.numberOfVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RateMovie, {\n            handleRatingChange: handleRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"WAzKpRIXhZwUGcQyiG/xytma/Fc=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movies_frontend/movie-app/src/components/MoviePage/index.tsx"],"names":["React","useEffect","useState","useParams","MovieInfo","Rating","RateMovie","get","GET_MOVIE","Grid","MoviePage","movieId","movie","setMovie","rating","setRating","getMovie","data","undefined","r","numberOfVotes","console","log","handleRatingChange","newMovie","margin","id","title","description","backgroundColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\n\nimport { IMovie } from \"../../interfaces/movieInterface\";\nimport { MovieInfo } from \"./components/MovieInfo\";\nimport { Rating } from \"./components/Rating\";\nimport { RateMovie } from \"./components/RateMovie\";\nimport { get, GET_MOVIE } from \"../../services/restService\";\nimport { Grid } from \"@material-ui/core\";\n\ninterface test {\n  rating: {\n    r: number;\n    numberOfVotes: number;\n  };\n}\n\nexport const MoviePage = () => {\n  const { movieId } = useParams<{ movieId: string }>();\n  const [movie, setMovie] = useState<IMovie>();\n  const [rating, setRating] = useState<test>();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await get(GET_MOVIE, movieId);\n\n      setMovie(data === undefined ? undefined : data);\n      setRating({\n        rating: { r: data.rating, numberOfVotes: data.numberOfVotes },\n      });\n      console.log(movie);\n    };\n    getMovie();\n  }, [movieId]);\n\n  const handleRatingChange = (rating: number) => {\n    const newMovie = movie;\n    newMovie!.rating = rating;\n    newMovie!.numberOfVotes += 1;\n    console.log(rating);\n\n    setMovie(newMovie);\n    console.log(movie);\n  };\n\n  return (\n    <>\n      {movie != undefined && (\n        <div style={{ margin: \"2%\" }}>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item>\n              <MovieInfo\n                id={movie.id}\n                title={movie.title}\n                description={movie.description}\n                rating={movie.rating}\n                numberOfVotes={movie.numberOfVotes}\n              ></MovieInfo>\n            </Grid>\n            <Grid\n              direction=\"column\"\n              style={{ backgroundColor: \"blue\", marginLeft: \"5%\" }}\n            >\n              <Rating\n                rating={movie.rating}\n                numberOfVotes={movie.numberOfVotes}\n              ></Rating>\n\n              <RateMovie handleRatingChange={handleRatingChange}></RateMovie>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}