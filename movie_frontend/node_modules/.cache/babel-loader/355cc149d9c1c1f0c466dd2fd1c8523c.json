{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Autocomplete, CircularProgress, createFilterOptions, TextField } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport { get, MATCHING_MOVIES } from \"../services/restService\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filter = createFilterOptions();\nexport const SearchBar = () => {\n  _s();\n\n  const history = useHistory();\n  const [value, setValue] = useState();\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    let active = true;\n\n    if (inputValue.length < 3) {\n      // setOptions(value ? [value] : []);\n      setOptions([]);\n      return undefined;\n    }\n\n    const getMovies = async () => {\n      setLoading(true);\n      await get(MATCHING_MOVIES, inputValue).then(data => {\n        if (active) {\n          setOptions(data === undefined ? [] : data);\n        }\n\n        setLoading(false);\n      });\n    };\n\n    getMovies();\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue]);\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const handleSelect = (event, value) => {\n    if (value != null) {\n      history.push({\n        pathname: `/movie/${value.id}`\n      });\n    } //Route to movie page\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      classes: classes,\n      id: \"free-solo\",\n      sx: {\n        width: 600\n      },\n      onOpen: () => {\n        setOpen(true);\n      },\n      onClose: () => {\n        setOpen(false);\n      },\n      style: {\n        color: \"white\"\n      },\n      value: value,\n      isOptionEqualToValue: (option, value) => option.title === value.title,\n      getOptionLabel: option => option.title,\n      options: options,\n      open: open,\n      filterOptions: (options, params) => {\n        const filtered = filter(options, params);\n\n        if (options.length < 1 && params.inputValue.length > 2) {\n          filtered.push({\n            id: \"\",\n            title: `Add \" ${params.inputValue}\"`,\n            description: \"\",\n            rating: 0,\n            numberOfVotes: 0\n          });\n        }\n\n        return filtered;\n      },\n      onChange: (event, value) => handleSelect(event, value),\n      onInputChange: (event, newInputValue) => {\n        setInputValue(newInputValue);\n      },\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Movie\",\n        InputProps: { ...params.InputProps,\n          classes: classes,\n          endAdornment: /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              color: \"inherit\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this) : null, params.InputProps.endAdornment]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SearchBar, \"9ZllmVBePU3PY1jWlHIkhp0LZzQ=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = SearchBar;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\n      // Default transform is \"translate(14px, 20px) scale(1)\"\"\n      // This lines up the label with the initial cursor position in the input\n      // after changing its padding-left.\n      color: \"white\"\n    }\n  },\n  inputRoot: {\n    color: \"white\",\n    // This matches the specificity of the default styles at https://github.com/mui-org/material-ui/blob/v4.11.3/packages/material-ui-lab/src/Autocomplete/Autocomplete.js#L90\n    '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\n      // Default left padding is 6px\n      color: \"white\",\n      borderColor: \"white\"\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\"\n    },\n    \"&:hover .MuiInputLabel-outlined\": {\n      color: \"red\"\n    }\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/SearchBar.tsx"],"names":["React","Fragment","useEffect","useState","Autocomplete","CircularProgress","createFilterOptions","TextField","useHistory","get","MATCHING_MOVIES","makeStyles","filter","SearchBar","history","value","setValue","open","setOpen","options","setOptions","inputValue","setInputValue","loading","setLoading","classes","useStyles","active","length","undefined","getMovies","then","data","handleSelect","event","push","pathname","id","width","color","option","title","params","filtered","description","rating","numberOfVotes","newInputValue","InputProps","endAdornment","theme","root","inputRoot","borderColor"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Autocomplete,\n  CircularProgress,\n  createFilterOptions,\n  TextField,\n} from \"@mui/material\";\nimport { IMovie } from \"../interfaces/movieInterface\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { get, MATCHING_MOVIES } from \"../services/restService\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst filter = createFilterOptions<IMovie>();\n\nexport const SearchBar = () => {\n  const history = useHistory();\n  const [value, setValue] = useState();\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState<readonly IMovie[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    let active = true;\n\n    if (inputValue.length < 3) {\n      // setOptions(value ? [value] : []);\n\n      setOptions([]);\n      return undefined;\n    }\n\n    const getMovies = async () => {\n      setLoading(true);\n      await get(MATCHING_MOVIES, inputValue).then((data) => {\n        if (active) {\n          setOptions(data === undefined ? [] : data);\n        }\n        setLoading(false);\n      });\n    };\n    getMovies();\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  const handleSelect = (event: any, value: any) => {\n    if (value != null) {\n      history.push({\n        pathname: `/movie/${value.id}`,\n      });\n    }\n\n    //Route to movie page\n  };\n  return (\n    <>\n      <Autocomplete\n        classes={classes}\n        id=\"free-solo\"\n        sx={{ width: 600 }}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        style={{ color: \"white\" }}\n        value={value}\n        isOptionEqualToValue={(option, value) => option.title === value.title}\n        getOptionLabel={(option) => option.title}\n        options={options}\n        open={open}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (options.length < 1 && params.inputValue.length > 2) {\n            filtered.push({\n              id: \"\",\n              title: `Add \" ${params.inputValue}\"`,\n              description: \"\",\n              rating: 0,\n              numberOfVotes: 0,\n            });\n          }\n          return filtered;\n        }}\n        onChange={(event, value) => handleSelect(event, value)}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Movie\"\n            InputProps={{\n              ...params.InputProps,\n              classes: classes,\n\n              endAdornment: (\n                <Fragment>\n                  {loading ? (\n                    <CircularProgress color=\"inherit\" size={20} />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </Fragment>\n              ),\n            }}\n          />\n        )}\n      />\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    \"& .MuiInputLabel-outlined:not(.MuiInputLabel-shrink)\": {\n      // Default transform is \"translate(14px, 20px) scale(1)\"\"\n      // This lines up the label with the initial cursor position in the input\n      // after changing its padding-left.\n\n      color: \"white\",\n    },\n  },\n  inputRoot: {\n    color: \"white\",\n    // This matches the specificity of the default styles at https://github.com/mui-org/material-ui/blob/v4.11.3/packages/material-ui-lab/src/Autocomplete/Autocomplete.js#L90\n    '&[class*=\"MuiOutlinedInput-root\"] .MuiAutocomplete-input:first-child': {\n      // Default left padding is 6px\n\n      color: \"white\",\n      borderColor: \"white\",\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n    },\n    \"&:hover .MuiInputLabel-outlined\": {\n      color: \"red\",\n    },\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}