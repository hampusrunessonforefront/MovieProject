{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movies_frontend/movie-app/src/components/SearchBar.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchBar = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [suggestions, setSuggestions] = useState();\n  const [open, setOpen] = useState(false);\n  const [movieData, setMovieData] = useState([{\n    id: 100,\n    title: \"Iron pony\",\n    description: \"asdklfjsalkjdf\",\n    rating: 2,\n    numberOfVotes: 1\n  }, {\n    id: 200,\n    title: \"Spaceglider\",\n    description: \"space gliding monkeys\",\n    rating: 10,\n    numberOfVotes: 3\n  }]);\n\n  const handleSelect = (event, value) => {\n    _s();\n\n    console.log(value);\n    useHistory().push({\n      pathname: \"/template\",\n      state: value\n    }); //Route to movie page\n  };\n\n  _s(handleSelect, \"ebO9cvF3Ou0GZnyLIaifBK5vWck=\", false, function () {\n    return [useHistory];\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      freeSolo: true,\n      id: \"free-solo\",\n      disableClearable: true,\n      autoHighlight: true,\n      sx: {\n        width: 600\n      },\n      options: movieData,\n      getOptionLabel: option => option.title // renderOption={(props, option) => (\n      //   <div style={{ cursor: \"pointer\" }}>\n      //     <Grid container spacing={2}>\n      //       <Grid item>\n      //         <img src={movieImage} width=\"50px\" height=\"50px\" />\n      //       </Grid>\n      //       <Grid item spacing={0}>\n      //         {option.title}\n      //       </Grid>\n      //     </Grid>\n      //   </div>\n      // )}\n      // renderOption={(props, option) => (\n      //   <div>\n      //     <Link\n      //       style={{ width: \"100%\", height: \"100%\" }}\n      //       to={{\n      //         pathname: `/movie/${option.id}`,\n      //         state: option,\n      //       }}\n      //     >\n      //       {option.title}\n      //     </Link>\n      //   </div>\n      // )}\n      ,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"Movie\",\n        InputProps: { ...params.InputProps,\n          type: \"search\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this),\n      onChange: (event, value) => handleSelect(event, value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(SearchBar, \"+ZRb6/8HlnTlXOB2FqFUldgGN1U=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movies_frontend/movie-app/src/components/SearchBar.tsx"],"names":["React","useState","Autocomplete","TextField","useHistory","SearchBar","suggestions","setSuggestions","open","setOpen","movieData","setMovieData","id","title","description","rating","numberOfVotes","handleSelect","event","value","console","log","push","pathname","state","width","option","params","InputProps","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,YAAT,EAA6BC,SAA7B,QAA8C,eAA9C;AAGA,SAAeC,UAAf,QAAiC,kBAAjC;;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAW,CACnD;AACEW,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEC,IAAAA,WAAW,EAAE,gBAHf;AAIEC,IAAAA,MAAM,EAAE,CAJV;AAKEC,IAAAA,aAAa,EAAE;AALjB,GADmD,EAQnD;AACEJ,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,WAAW,EAAE,uBAHf;AAIEC,IAAAA,MAAM,EAAE,EAJV;AAKEC,IAAAA,aAAa,EAAE;AALjB,GARmD,CAAX,CAA1C;;AAiBA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAaC,KAAb,KAA4B;AAAA;;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAf,IAAAA,UAAU,GAAGkB,IAAb,CAAkB;AAChBC,MAAAA,QAAQ,EAAE,WADM;AAGhBC,MAAAA,KAAK,EAAEL;AAHS,KAAlB,EAF+C,CAO/C;AACD,GARD;;AApB6B,KAoBvBF,YApBuB;AAAA,YAsB3Bb,UAtB2B;AAAA;;AA8B7B,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,gBAAgB,MAHlB;AAIE,MAAA,aAAa,MAJf;AAKE,MAAA,EAAE,EAAE;AAAEqB,QAAAA,KAAK,EAAE;AAAT,OALN;AAME,MAAA,OAAO,EAAEf,SANX;AAOE,MAAA,cAAc,EAAGgB,MAAD,IAAYA,MAAM,CAACb,KAPrC,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCF;AAiCE,MAAA,WAAW,EAAGc,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,UAAU,EAAE,EACV,GAAGA,MAAM,CAACC,UADA;AAEVC,UAAAA,IAAI,EAAE;AAFI;AAHd;AAAA;AAAA;AAAA;AAAA,cAlCJ;AA2CE,MAAA,QAAQ,EAAE,CAACX,KAAD,EAAQC,KAAR,KAAkBF,YAAY,CAACC,KAAD,EAAQC,KAAR;AA3C1C;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiDD,CA/EM;;IAAMd,S;;KAAAA,S","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Autocomplete, Grid, TextField } from \"@mui/material\";\nimport { IMovie } from \"../interfaces/movieInterface\";\nimport movieImage from \"../images/movieIMG.jpeg\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { height } from \"@mui/system\";\n\nexport const SearchBar = () => {\n  const [suggestions, setSuggestions] = useState();\n  const [open, setOpen] = useState(false);\n  const [movieData, setMovieData] = useState<IMovie[]>([\n    {\n      id: 100,\n      title: \"Iron pony\",\n      description: \"asdklfjsalkjdf\",\n      rating: 2,\n      numberOfVotes: 1,\n    },\n    {\n      id: 200,\n      title: \"Spaceglider\",\n      description: \"space gliding monkeys\",\n      rating: 10,\n      numberOfVotes: 3,\n    },\n  ]);\n\n  const handleSelect = (event: any, value: any) => {\n    console.log(value);\n    useHistory().push({\n      pathname: \"/template\",\n\n      state: value,\n    });\n    //Route to movie page\n  };\n\n  return (\n    <>\n      <Autocomplete\n        freeSolo\n        id=\"free-solo\"\n        disableClearable\n        autoHighlight\n        sx={{ width: 600 }}\n        options={movieData}\n        getOptionLabel={(option) => option.title}\n        // renderOption={(props, option) => (\n        //   <div style={{ cursor: \"pointer\" }}>\n        //     <Grid container spacing={2}>\n        //       <Grid item>\n        //         <img src={movieImage} width=\"50px\" height=\"50px\" />\n        //       </Grid>\n        //       <Grid item spacing={0}>\n        //         {option.title}\n        //       </Grid>\n        //     </Grid>\n        //   </div>\n        // )}\n        // renderOption={(props, option) => (\n        //   <div>\n        //     <Link\n        //       style={{ width: \"100%\", height: \"100%\" }}\n        //       to={{\n        //         pathname: `/movie/${option.id}`,\n        //         state: option,\n        //       }}\n        //     >\n        //       {option.title}\n        //     </Link>\n        //   </div>\n        // )}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Movie\"\n            InputProps={{\n              ...params.InputProps,\n              type: \"search\",\n            }}\n          />\n        )}\n        onChange={(event, value) => handleSelect(event, value)}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}