{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { get, GET_MOVIE, patch, PATCH_MOVIE } from \"../../../services/restService\";\nexport const useMovie = movieId => {\n  _s();\n\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await get(GET_MOVIE, movieId);\n      setMovie(data);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const handleRatingChange = async rating => {\n    if (movie !== undefined) {\n      const votes = movie.numberOfVotes + 1;\n      const addToRating = (rating - movie.rating) / votes;\n      const newRating = Math.round((movie.rating + addToRating) * 10) / 10;\n      setMovie({ ...movie,\n        rating: newRating,\n        numberOfVotes: votes\n      });\n      await patch(PATCH_MOVIE, movie.id, {\n        rating: newRating,\n        numberOfVotes: votes\n      });\n    }\n  };\n\n  return {\n    movie,\n    handleRatingChange\n  };\n};\n\n_s(useMovie, \"zLQzb3KCyZr1Tue8ze3ysZzgn6s=\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/MovieHook.tsx"],"names":["useEffect","useState","get","GET_MOVIE","patch","PATCH_MOVIE","useMovie","movieId","movie","setMovie","getMovie","data","handleRatingChange","rating","undefined","votes","numberOfVotes","addToRating","newRating","Math","round","id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SACEC,GADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,WAJF,QAKO,+BALP;AAOA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAqB;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMC,IAAI,GAAG,MAAMT,GAAG,CAACC,SAAD,EAAYI,OAAZ,CAAtB;AAEAE,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;;AAKAD,IAAAA,QAAQ;AACT,GAPQ,EAON,CAACH,OAAD,CAPM,CAAT;;AASA,QAAMK,kBAAkB,GAAG,MAAOC,MAAP,IAA0B;AACnD,QAAIL,KAAK,KAAKM,SAAd,EAAyB;AACvB,YAAMC,KAAK,GAAGP,KAAK,CAACQ,aAAN,GAAsB,CAApC;AACA,YAAMC,WAAW,GAAG,CAACJ,MAAM,GAAGL,KAAK,CAACK,MAAhB,IAA0BE,KAA9C;AACA,YAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACZ,KAAK,CAACK,MAAN,GAAeI,WAAhB,IAA+B,EAA1C,IAAgD,EAAlE;AAEAR,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPK,QAAAA,MAAM,EAAEK,SAFD;AAGPF,QAAAA,aAAa,EAAED;AAHR,OAAD,CAAR;AAKA,YAAMX,KAAK,CAACC,WAAD,EAAcG,KAAK,CAACa,EAApB,EAAwB;AACjCR,QAAAA,MAAM,EAAEK,SADyB;AAEjCF,QAAAA,aAAa,EAAED;AAFkB,OAAxB,CAAX;AAID;AACF,GAhBD;;AAiBA,SAAO;AAAEP,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAP;AACD,CA9BM;;GAAMN,Q","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { IMovie } from \"../../../interfaces/movieInterface\";\nimport {\n  get,\n  GET_MOVIE,\n  patch,\n  PATCH_MOVIE,\n} from \"../../../services/restService\";\n\nexport const useMovie = (movieId: string) => {\n  const [movie, setMovie] = useState<IMovie>();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await get(GET_MOVIE, movieId);\n\n      setMovie(data);\n    };\n    getMovie();\n  }, [movieId]);\n\n  const handleRatingChange = async (rating: number) => {\n    if (movie !== undefined) {\n      const votes = movie.numberOfVotes + 1;\n      const addToRating = (rating - movie.rating) / votes;\n      const newRating = Math.round((movie.rating + addToRating) * 10) / 10;\n\n      setMovie({\n        ...movie,\n        rating: newRating,\n        numberOfVotes: votes,\n      });\n      await patch(PATCH_MOVIE, movie.id, {\n        rating: newRating,\n        numberOfVotes: votes,\n      });\n    }\n  };\n  return { movie, handleRatingChange };\n};\n"]},"metadata":{},"sourceType":"module"}