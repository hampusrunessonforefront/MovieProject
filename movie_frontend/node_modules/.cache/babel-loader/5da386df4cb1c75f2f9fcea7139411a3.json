{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/MovieInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport defaultImg from \"../../../images/avengers.jpeg\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieInfo = movie => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 6,\n    justifyContent: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.imageUrl == null ? defaultImg : movie.imageUrl,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [movie.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Released in \", movie.releaseYear, \" \", movie.runtime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: movie.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: movie.director\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: movie.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieInfo, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = MovieInfo;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"&::before\": {\n      display: \"inline-block\",\n      margin: \"0, 0.5rem 0.2rem\",\n      content: \"\",\n      lineHeight: \"0.5rem\",\n      padding: \"1px\",\n      borderRadius: \"50%\",\n      verticalAlign: \"middle\"\n    }\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/MovieInfo.tsx"],"names":["React","Grid","defaultImg","makeStyles","MovieInfo","movie","classes","useStyles","imageUrl","title","releaseYear","runtime","genre","director","description","theme","root","display","margin","content","lineHeight","padding","borderRadius","verticalAlign"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAmB;AAAA;;AAC1C,QAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAE,CAAzC;AAA4C,IAAA,cAAc,EAAC,QAA3D;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE;AACE,QAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,IAAkB,IAAlB,GAAyBN,UAAzB,GAAsCG,KAAK,CAACG,QADnD;AAEE,QAAA,KAAK,EAAE;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,8BACE;AAAA,mBAAKH,KAAK,CAACI,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mCACeJ,KAAK,CAACK,WADrB,OACmCL,KAAK,CAACM,OADzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA,kBAAKN,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,kBAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,kBAAKR,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAvBM;;GAAMV,S;UACKG,S;;;KADLH,S;AAyBb,MAAMG,SAAS,GAAGJ,UAAU,CAAEY,KAAD,KAAiB;AAC5CC,EAAAA,IAAI,EAAE;AACJ,iBAAa;AACXC,MAAAA,OAAO,EAAE,cADE;AAEXC,MAAAA,MAAM,EAAE,kBAFG;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,UAAU,EAAE,QAJD;AAKXC,MAAAA,OAAO,EAAE,KALE;AAMXC,MAAAA,YAAY,EAAE,KANH;AAOXC,MAAAA,aAAa,EAAE;AAPJ;AADT;AADsC,CAAjB,CAAD,CAA5B","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { IMovie } from \"../../../interfaces/movieInterface\";\nimport defaultImg from \"../../../images/avengers.jpeg\";\nimport { makeStyles } from \"@mui/styles\";\n\nexport const MovieInfo = (movie: IMovie) => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"row\" spacing={6} justifyContent=\"center\">\n      <Grid item xs={2}></Grid>\n      <Grid item xs={4}>\n        <img\n          src={movie.imageUrl == null ? defaultImg : movie.imageUrl}\n          width={\"100%\"}\n        />\n      </Grid>\n\n      <Grid item xs={6}>\n        <h1>{movie.title} </h1>\n        <h6>\n          Released in {movie.releaseYear} {movie.runtime}\n        </h6>\n        <h6>{movie.genre}</h6>\n        <h6>{movie.director}</h6>\n        <h4>{movie.description}</h4>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    \"&::before\": {\n      display: \"inline-block\",\n      margin: \"0, 0.5rem 0.2rem\",\n      content: \"\",\n      lineHeight: \"0.5rem\",\n      padding: \"1px\",\n      borderRadius: \"50%\",\n      verticalAlign: \"middle\",\n    },\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}