{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/AllMoviesPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, FormControl, Grid, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { MovieList } from \"./components/MovieList\";\nimport { ALL_MOVIES, deleteMovie, get, GET_MOVIES_BY_GENRE } from \"../../services/restService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AllMoviesPage = () => {\n  _s();\n\n  const [movies, setMovies] = useState();\n  const [test, setTest] = useState();\n  const [genre, setGenre] = useState();\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await get(ALL_MOVIES);\n      setMovies(data);\n    };\n\n    fetch();\n  }, []);\n\n  const handleDelete = async id => {\n    setMovies(movies.filter(movie => movie.id != id));\n    await deleteMovie(id);\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await get(GET_MOVIES_BY_GENRE, genre);\n      setMovies(data);\n    };\n\n    if (genre) {\n      fetch();\n    }\n  }, [genre]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 8,\n      children: movies != undefined && /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: movies,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 120\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: genre !== null && genre !== void 0 ? genre : \" \",\n          label: \"Genre\",\n          MenuProps: MenuProps,\n          autoWidth: true,\n          onChange: event => {\n            setGenre(event.target.value);\n          },\n          children: genres.map((item, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: item.genre,\n            children: item.genre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllMoviesPage, \"jK8bppX0XLdgYTLyWySKHtSArK0=\");\n\n_c = AllMoviesPage;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 50 * 4.5 + 8,\n      width: 250\n    }\n  }\n};\nconst genres = [{\n  genre: \"Drama\"\n}, {\n  genre: \"Crime\"\n}, {\n  genre: \"Action\"\n}, {\n  genre: \"Adventure\"\n}, {\n  genre: \"Biography\"\n}, {\n  genre: \"History\"\n}, {\n  genre: \"Sci-Fi\"\n}, {\n  genre: \"Romance\"\n}, {\n  genre: \"Western\"\n}, {\n  genre: \"Fantasy\"\n}, {\n  genre: \"Comedy\"\n}, {\n  genre: \"Thriller\"\n}, {\n  genre: \"Animation\"\n}, {\n  genre: \"Family\"\n}, {\n  genre: \"War\"\n}, {\n  genre: \"Mystery\"\n}, {\n  genre: \"Music\"\n}, {\n  genre: \"Sport\"\n}, {\n  genre: \"Horror\"\n}, {\n  genre: \"Musical\"\n}, {\n  genre: \"Film-Noir\"\n}, {\n  genre: \"test\"\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMoviesPage\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/AllMoviesPage/AllMoviesPage.tsx"],"names":["Box","FormControl","Grid","InputLabel","MenuItem","Select","React","useEffect","useState","MovieList","ALL_MOVIES","deleteMovie","get","GET_MOVIES_BY_GENRE","AllMoviesPage","movies","setMovies","test","setTest","genre","setGenre","fetch","data","handleDelete","id","filter","movie","width","height","undefined","m","minWidth","MenuProps","event","target","value","genres","map","item","index","PaperProps","style","maxHeight"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,WAFF,EAGEC,IAHF,EAIEC,UAJF,EAOEC,QAPF,EAQEC,MARF,QASO,eATP;AAUA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SACEC,UADF,EAEEC,WAFF,EAGEC,GAHF,EAIEC,mBAJF,QAMO,4BANP;;AAQA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMV,GAAG,CAACF,UAAD,CAAtB;AACAM,MAAAA,SAAS,CAACM,IAAD,CAAT;AACD,KAHD;;AAIAD,IAAAA,KAAK;AACN,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,YAAY,GAAG,MAAOC,EAAP,IAAsB;AACzCR,IAAAA,SAAS,CAACD,MAAM,CAAEU,MAAR,CAAgBC,KAAD,IAAWA,KAAK,CAACF,EAAN,IAAYA,EAAtC,CAAD,CAAT;AACA,UAAMb,WAAW,CAACa,EAAD,CAAjB;AACD,GAHD;;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMV,GAAG,CAACC,mBAAD,EAAsBM,KAAtB,CAAtB;AACAH,MAAAA,SAAS,CAACM,IAAD,CAAT;AACD,KAHD;;AAIA,QAAIH,KAAJ,EAAW;AACTE,MAAAA,KAAK;AACN;AACF,GARQ,EAQN,CAACF,KAAD,CARM,CAAT;AAUA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AAAEQ,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KADN;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,aAAa,EAAC,KAHhB;AAIE,IAAA,cAAc,EAAC,QAJjB;AAKE,IAAA,SAAS,EAAC,OALZ;AAAA,4BAOE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,gBACGb,MAAM,IAAIc,SAAV,iBACC,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEd,MAAnB;AAA2B,QAAA,YAAY,EAAEQ;AAAzC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF,eAaE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEO,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,QAAQ,EAAE;AAAlB,SAAjB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,0BADV;AAEE,UAAA,EAAE,EAAC,oBAFL;AAGE,UAAA,KAAK,EAAEZ,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW,GAHlB;AAIE,UAAA,KAAK,EAAC,OAJR;AAKE,UAAA,SAAS,EAAEa,SALb;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBb,YAAAA,QAAQ,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,WATH;AAAA,oBAWGC,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,kBACV,QAAC,QAAD;AAAsB,YAAA,KAAK,EAAED,IAAI,CAACnB,KAAlC;AAAA,sBACGmB,IAAI,CAACnB;AADR,aAAeoB,KAAf;AAAA;AAAA;AAAA;AAAA,kBADD;AAXH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAjEM;;GAAMzB,a;;KAAAA,a;AAmEb,MAAMkB,SAAS,GAAG;AAChBQ,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,KAAK,GAAL,GAAW,CADjB;AAELf,MAAAA,KAAK,EAAE;AAFF;AADG;AADI,CAAlB;AASA,MAAMS,MAAM,GAAG,CACb;AAAEjB,EAAAA,KAAK,EAAE;AAAT,CADa,EAEb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAFa,EAGb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAHa,EAIb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAJa,EAKb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CALa,EAMb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CANa,EAOb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAPa,EAQb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CARa,EASb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CATa,EAUb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAVa,EAWb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAXa,EAYb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAZa,EAab;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAba,EAcb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAda,EAeb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAfa,EAgBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAhBa,EAiBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAjBa,EAkBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAlBa,EAmBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAnBa,EAoBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CApBa,EAqBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CArBa,EAsBb;AAAEA,EAAAA,KAAK,EAAE;AAAT,CAtBa,CAAf","sourcesContent":["import {\n  Box,\n  FormControl,\n  Grid,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Select,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { MovieList } from \"./components/MovieList\";\nimport { IMovie } from \"../../interfaces/movieInterface\";\nimport {\n  ALL_MOVIES,\n  deleteMovie,\n  get,\n  GET_MOVIES_BY_GENRE,\n  GET_TOP_RATED_MOVIES,\n} from \"../../services/restService\";\n\nexport const AllMoviesPage = () => {\n  const [movies, setMovies] = useState<IMovie[]>();\n  const [test, setTest] = useState();\n  const [genre, setGenre] = useState<string>();\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await get(ALL_MOVIES);\n      setMovies(data);\n    };\n    fetch();\n  }, []);\n\n  const handleDelete = async (id: string) => {\n    setMovies(movies!.filter((movie) => movie.id != id));\n    await deleteMovie(id);\n  };\n\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await get(GET_MOVIES_BY_GENRE, genre);\n      setMovies(data);\n    };\n    if (genre) {\n      fetch();\n    }\n  }, [genre]);\n\n  return (\n    <Box\n      sx={{ width: \"100%\", height: \"100%\" }}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n      minHeight=\"100vh\"\n    >\n      <Grid item xs={2}></Grid>\n      <Grid item xs={8}>\n        {movies != undefined && (\n          <MovieList movies={movies} handleDelete={handleDelete}></MovieList>\n        )}\n      </Grid>\n      <Grid item xs={2}>\n        <FormControl sx={{ m: 1, minWidth: 120 }}>\n          <InputLabel id=\"demo-simple-select-label\">Genre</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={genre ?? \" \"}\n            label=\"Genre\"\n            MenuProps={MenuProps}\n            autoWidth\n            onChange={(event) => {\n              setGenre(event.target.value as string);\n            }}\n          >\n            {genres.map((item, index) => (\n              <MenuItem key={index} value={item.genre}>\n                {item.genre}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Box>\n  );\n};\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: 50 * 4.5 + 8,\n      width: 250,\n    },\n  },\n};\n\nconst genres = [\n  { genre: \"Drama\" },\n  { genre: \"Crime\" },\n  { genre: \"Action\" },\n  { genre: \"Adventure\" },\n  { genre: \"Biography\" },\n  { genre: \"History\" },\n  { genre: \"Sci-Fi\" },\n  { genre: \"Romance\" },\n  { genre: \"Western\" },\n  { genre: \"Fantasy\" },\n  { genre: \"Comedy\" },\n  { genre: \"Thriller\" },\n  { genre: \"Animation\" },\n  { genre: \"Family\" },\n  { genre: \"War\" },\n  { genre: \"Mystery\" },\n  { genre: \"Music\" },\n  { genre: \"Sport\" },\n  { genre: \"Horror\" },\n  { genre: \"Musical\" },\n  { genre: \"Film-Noir\" },\n  { genre: \"test\" },\n];\n"]},"metadata":{},"sourceType":"module"}