{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/Rating.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Card, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rating = props => {\n  _s();\n\n  const {\n    rating,\n    numberOfVotes\n  } = props;\n\n  const convertNumber = labelValue => {\n    // Nine Zeroes for Billions\n    return Math.abs(Number(labelValue)) >= 1.0e9 ? (Math.abs(Number(labelValue)) / 1.0e9).toFixed(1) + \"B\" : // Six Zeroes for Millions\n    Math.abs(Number(labelValue)) >= 1.0e6 ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(1) + \"M\" : // Three Zeroes for Thousands\n    Math.abs(Number(labelValue)) >= 1.0e3 ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(0) + \"K\" : Math.abs(Number(labelValue));\n  };\n\n  useEffect(() => {}, [rating]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          paddingLeft: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          fill: \"#FFD700\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"50\",\n          height: \"50\",\n          viewBox: \"0 0 30 30\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: \"1 0 auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"div\",\n          variant: \"h6\",\n          children: [rating, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          component: \"div\",\n          children: [convertNumber(numberOfVotes), \" votes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rating, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/components/Rating.tsx"],"names":["Box","Card","CardContent","CardMedia","Typography","useEffect","Rating","props","rating","numberOfVotes","convertNumber","labelValue","Math","abs","Number","toFixed","display","flexDirection","justifyContent","alignItems","paddingLeft","flex"],"mappings":"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","sourcesContent":["import { Box, Card, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\n\nimport { IRating } from \"../../../interfaces/movieInterface\";\n\ninterface RatingProps {\n  rating: number;\n  numberOfVotes: number;\n}\n\nexport const Rating = (props: RatingProps) => {\n  const { rating, numberOfVotes } = props;\n  const convertNumber = (labelValue: number) => {\n    // Nine Zeroes for Billions\n    return Math.abs(Number(labelValue)) >= 1.0e9\n      ? (Math.abs(Number(labelValue)) / 1.0e9).toFixed(1) + \"B\"\n      : // Six Zeroes for Millions\n      Math.abs(Number(labelValue)) >= 1.0e6\n      ? (Math.abs(Number(labelValue)) / 1.0e6).toFixed(1) + \"M\"\n      : // Three Zeroes for Thousands\n      Math.abs(Number(labelValue)) >= 1.0e3\n      ? (Math.abs(Number(labelValue)) / 1.0e3).toFixed(0) + \"K\"\n      : Math.abs(Number(labelValue));\n  };\n\n  useEffect(() => {}, [rating]);\n\n  return (\n    <Card sx={{ display: \"flex\" }}>\n      <CardMedia\n        component={() => (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              paddingLeft: 10,\n            }}\n          >\n            <svg\n              fill=\"#FFD700\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"50\"\n              height=\"50\"\n              viewBox=\"0 0 30 30\"\n            >\n              <path d=\"M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\" />\n            </svg>\n          </div>\n        )}\n      />\n      <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n        <CardContent sx={{ flex: \"1 0 auto\" }}>\n          <Typography component=\"div\" variant=\"h6\">\n            {rating}/10\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"text.secondary\"\n            component=\"div\"\n          >\n            {convertNumber(numberOfVotes)} votes\n          </Typography>\n        </CardContent>\n      </Box>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}