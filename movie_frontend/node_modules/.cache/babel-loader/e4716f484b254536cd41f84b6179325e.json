{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL_API = \"http://localhost:8080\";\nexport const ALL_MOVIES = \"/api/movie/getall\";\nexport const MATCHING_MOVIES = \"/api/movie/matchingmovies\";\nexport const GET_MOVIE = \"/api/movie/get\";\nexport const PATCH_MOVIE = \"/api/movie/rating\";\nexport const GET_TOP_RATED_MOVIES = \"/api/movie/topratedmovies\";\nexport const ADD_MOVIE = \"/api/movie/add\";\nconst DELETE_MOVIE = \"/api/movie/delete\";\nexport const get = async (endpoint, paramValue) => {\n  try {\n    const response = await axios.get(BASE_URL_API + endpoint, {\n      params: {\n        value: paramValue\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const post = async (endpoint, body) => {\n  try {\n    const response = await axios.post(BASE_URL_API + endpoint, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const patch = async (endpoint, paramValue, body) => {\n  try {\n    const response = await axios.patch(BASE_URL_API + endpoint, body, {\n      params: {\n        value: paramValue\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteMovie = async id => {\n  try {\n    const response = await axios.delete(BASE_URL_API + DELETE_MOVIE, {\n      params: {\n        value: id\n      },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/services/restService.tsx"],"names":["axios","BASE_URL_API","ALL_MOVIES","MATCHING_MOVIES","GET_MOVIE","PATCH_MOVIE","GET_TOP_RATED_MOVIES","ADD_MOVIE","DELETE_MOVIE","get","endpoint","paramValue","response","params","value","headers","Accept","data","err","console","log","post","body","patch","deleteMovie","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,YAAY,GAAG,uBAArB;AACA,OAAO,MAAMC,UAAU,GAAG,mBAAnB;AACP,OAAO,MAAMC,eAAe,GAAG,2BAAxB;AACP,OAAO,MAAMC,SAAS,GAAG,gBAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,mBAApB;AACP,OAAO,MAAMC,oBAAoB,GAAG,2BAA7B;AACP,OAAO,MAAMC,SAAS,GAAG,gBAAlB;AACP,MAAMC,YAAY,GAAG,mBAArB;AAEA,OAAO,MAAMC,GAAG,GAAG,OAAOC,QAAP,EAAyBC,UAAzB,KAAiD;AAClE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACS,GAAN,CAAeR,YAAY,GAAGS,QAA9B,EAAwC;AAC7DG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEH;AAAT,OADqD;AAE7DI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFoD,KAAxC,CAAvB;AAOA,WAAOJ,QAAQ,CAACK,IAAhB;AACD,GATD,CASE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAbM;AAeP,OAAO,MAAMG,IAAI,GAAG,OAAOX,QAAP,EAAyBY,IAAzB,KAA0C;AAC5D,MAAI;AACF,UAAMV,QAAQ,GAAG,MAAMZ,KAAK,CAACqB,IAAN,CAAgBpB,YAAY,GAAGS,QAA/B,EAAyCY,IAAzC,EAA+C;AACpEP,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAD2D,KAA/C,CAAvB;AAMA,WAAOJ,QAAQ,CAACK,IAAhB;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAZM;AAcP,OAAO,MAAMK,KAAK,GAAG,OACnBb,QADmB,EAEnBC,UAFmB,EAGnBW,IAHmB,KAIhB;AACH,MAAI;AACF,UAAMV,QAAQ,GAAG,MAAMZ,KAAK,CAACuB,KAAN,CAAiBtB,YAAY,GAAGS,QAAhC,EAA0CY,IAA1C,EAAgD;AACrET,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEH;AAAT,OAD6D;AAErEI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAF4D,KAAhD,CAAvB;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,WAAOA,QAAQ,CAACK,IAAhB;AACD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMM,WAAW,GAAG,MAAOC,EAAP,IAAsB;AAC/C,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMZ,KAAK,CAAC0B,MAAN,CAAazB,YAAY,GAAGO,YAA5B,EAA0C;AAC/DK,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAEW;AAAT,OADuD;AAE/DV,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAFsD,KAA1C,CAAvB;AAOD,GARD,CAQE,OAAOE,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAZM","sourcesContent":["import axios from \"axios\";\nimport { IMovie, IRating } from \"../interfaces/movieInterface\";\n\nconst BASE_URL_API = \"http://localhost:8080\";\nexport const ALL_MOVIES = \"/api/movie/getall\";\nexport const MATCHING_MOVIES = \"/api/movie/matchingmovies\";\nexport const GET_MOVIE = \"/api/movie/get\";\nexport const PATCH_MOVIE = \"/api/movie/rating\";\nexport const GET_TOP_RATED_MOVIES = \"/api/movie/topratedmovies\";\nexport const ADD_MOVIE = \"/api/movie/add\";\nconst DELETE_MOVIE = \"/api/movie/delete\";\n\nexport const get = async (endpoint: string, paramValue?: string) => {\n  try {\n    const response = await axios.get<any>(BASE_URL_API + endpoint, {\n      params: { value: paramValue },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const post = async (endpoint: string, body: IMovie) => {\n  try {\n    const response = await axios.post<any>(BASE_URL_API + endpoint, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const patch = async (\n  endpoint: string,\n  paramValue: string,\n  body: IRating\n) => {\n  try {\n    const response = await axios.patch<any>(BASE_URL_API + endpoint, body, {\n      params: { value: paramValue },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    console.log(response);\n\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteMovie = async (id: string) => {\n  try {\n    const response = await axios.delete(BASE_URL_API + DELETE_MOVIE, {\n      params: { value: id },\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}