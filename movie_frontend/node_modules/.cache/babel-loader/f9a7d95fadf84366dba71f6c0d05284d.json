{"ast":null,"code":"var _jsxFileName = \"/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MovieInfo } from \"./components/MovieInfo\";\nimport { Rating } from \"./components/Rating\";\nimport { RateMovie } from \"./components/RateMovie\";\nimport { get, GET_MOVIE, patch, PATCH_MOVIE } from \"../../services/restService\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MoviePage = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState();\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await get(GET_MOVIE, movieId);\n      setMovie(data === undefined ? undefined : data);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const handleRatingChange = async rating => {\n    if (movie != undefined) {\n      const votes = movie.numberOfVotes + 1;\n      const addToRating = (rating - movie.rating) / votes;\n      const newRating = Math.round((movie.rating + addToRating) * 10) / 10;\n      setMovie({ ...movie,\n        rating: newRating,\n        numberOfVotes: votes\n      });\n      await patch(PATCH_MOVIE, movie.id, {\n        rating: newRating,\n        numberOfVotes: votes\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movie != undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"2%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(MovieInfo, {\n            id: movie.id,\n            title: movie.title,\n            description: movie.description,\n            rating: movie.rating,\n            numberOfVotes: movie.numberOfVotes,\n            genre: movie.genre,\n            imageUrl: movie.imageUrl,\n            director: movie.director,\n            runtime: movie.runtime,\n            gross: movie.gross,\n            releaseYear: movie.releaseYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            rating: movie.rating,\n            numberOfVotes: movie.numberOfVotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RateMovie, {\n            handleRatingChange: handleRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(MoviePage, \"/noMHjygQyX4qT2AJQDPHkn0TbM=\", false, function () {\n  return [useParams];\n});\n\n_c = MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["/Users/hampus.runesson/Kod/Code is king/MovieProject/movie_frontend/src/components/MoviePage/index.tsx"],"names":["React","useEffect","useState","useParams","MovieInfo","Rating","RateMovie","get","GET_MOVIE","patch","PATCH_MOVIE","Grid","MoviePage","movieId","movie","setMovie","getMovie","data","undefined","handleRatingChange","rating","votes","numberOfVotes","addToRating","newRating","Math","round","id","margin","title","description","genre","imageUrl","director","runtime","gross","releaseYear"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { IMovie } from \"../../interfaces/movieInterface\";\nimport { MovieInfo } from \"./components/MovieInfo\";\nimport { Rating } from \"./components/Rating\";\nimport { RateMovie } from \"./components/RateMovie\";\nimport { get, GET_MOVIE, patch, PATCH_MOVIE } from \"../../services/restService\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const MoviePage = () => {\n  const { movieId } = useParams<{ movieId: string }>();\n  const [movie, setMovie] = useState<IMovie>();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await get(GET_MOVIE, movieId);\n\n      setMovie(data === undefined ? undefined : data);\n    };\n    getMovie();\n  }, [movieId]);\n\n  const handleRatingChange = async (rating: number) => {\n    if (movie != undefined) {\n      const votes = movie.numberOfVotes + 1;\n      const addToRating = (rating - movie.rating) / votes;\n      const newRating = Math.round((movie.rating + addToRating) * 10) / 10;\n\n      setMovie({\n        ...movie,\n        rating: newRating,\n        numberOfVotes: votes,\n      });\n      await patch(PATCH_MOVIE, movie.id, {\n        rating: newRating,\n        numberOfVotes: votes,\n      });\n    }\n  };\n\n  return (\n    <>\n      {movie != undefined && (\n        <div style={{ margin: \"2%\" }}>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignContent=\"center\"\n          >\n            <Grid item xs={8}>\n              <MovieInfo\n                id={movie.id}\n                title={movie.title}\n                description={movie.description}\n                rating={movie.rating}\n                numberOfVotes={movie.numberOfVotes}\n                genre={movie.genre}\n                imageUrl={movie.imageUrl}\n                director={movie.director}\n                runtime={movie.runtime}\n                gross={movie.gross}\n                releaseYear={movie.releaseYear}\n              ></MovieInfo>\n            </Grid>\n            <Grid item xs={4}>\n              <Rating\n                rating={movie.rating}\n                numberOfVotes={movie.numberOfVotes}\n              ></Rating>\n\n              <RateMovie handleRatingChange={handleRatingChange}></RateMovie>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}